Описание логики контрактов WavesLands
На данный момент вся логика условно разделена между двумя контрактами - wlands_staking и economics

Staking контракт отвечает за:
- стейк-анстейк NFT земель
- стейк-анстейк уток
- claim ресурсов с застейканной земли
- перелет и лечение уток
- создание новой земли через разведэкспедицию
- апгрейд уровня земли
- применение артефактов, дающих разные плюшки (пока что существует всего 1 - PRESALE)

Контракт экономики сейчас обслуживает всего 2 вещи:
- продажа ресурсов фабрике
- покупка материалов у фабрики

Как все устроено:
Земля представляет собой NFT токен, у которого есть свойства - размер, континент и состав
(25 клеточек-terrains шести возможных типов). Размеры в игре бывают от S до XXL (площадь 1, 4, 9, 16, 25)
Земля может быть застейкана, с этого момента (timestamp) она начинает производить ресурсы.
Производительность зависит от уровня апгрейда инфраструктуры (от 0 до 3 на данный момент) и активированного артефакта PRESALE
Приватная функция applyBonuses вычисляет производительность.
Утка на данный момент в игре одна на юзера, она олицетворяет его персонаж. У утки есть рюкзак, пока что бесконечный,
для складирования ресурсов, материалов и товаров (товаров в игре пока нет). Он представляет собой строку-запись в стейте вида
"0:0_0_0_0_0_0:0_0_0_0_0_0:"
до первого двоеточия - уровень апгрейда рюкзака,
дальше - 6 ресурсов типов ["Oil", "Ore", "Wood", "Sand", "Clay", "Organic"]
потом 6 материалов с типами ["Fuel", "Metal", "Plank", "Glass", "Plastic", "Protein"]
после последнего двоеточия будут товары, которых пока нет
У утки также есть свойство локация, вида Continent_Type_id. Тип локации пока что или земля - L, или фабрика F

Анстейк земли, а также ее апгрейды и применение артефакта PRESALE производятся только при наличии утки в данной локации,
это сделано чтобы не терялись произведенные на данный момент ресурсы. Они перегружаются в рюкзак утки

Полет утки происходит через мини-игру на фронте, и результат записывается в блокчейн. Это запись такого вида:
# Health|Mission|  Obstcales   |         Winds           |  Path  |  Timestamp  ;              newLocation                 : timestamp
#  80_50|0,4_4,0|B3,3_B4,3_T2,1|WWSSESEWEEWNNESEEWSSEESNS|NNEEEENN|1670074470199;${continent}_${locationType}_${locationId}:1670074470199
здоровье в начале и конце пути, координаты начала и конца пути, координаты разного типа препятствий в начальный момент,
карта ветров (по всем 25 клеткам игрового поля), введенный юзером маршрут, таймстемп, новая локация, еще раз таймстемп.
Для того, чтобы игрок не мухлевал с игрой и не подсовывал функции flight() какой-то старый лог, вся эта длинная колбаса
подписывается бекендом и я проверяю подпись и время в пределах +- 5 минут

Также через полет происходит поисковая экспедиция. Если утка долетела с ненулевым здоровьем и есть в рюкзаке нужное
количество материалов либо приложен пеймент в usdn, то генерируется новая NFT земля размера S. Генерация псевдослучайная -
я не стал заморачиваться с vrf и ожиданием, потому что читинг почти ни на что не влияет (разве что читер может сделать себе землю
на нужном континенте). 25 клеток-terrains также генерятся с определенными вероятностями, чтобы обеспечить баланс ресурсов
по континентам

Еще важный момент - при каждом стейкинге-анстейкинге земли у нас актуализируется запись с ключом "resTypesProportions",
по ней мы храним общее количество terrains по каждому из 6 типов, чтобы использовать их пропорционально. Например,
в некоторых вызовах пользователь оплачивает некую услугу (к примеру, экспедицию) пакетом материалов. Мы взимаем их
в пропорции, соответствующей текущему балансу terrains, а значит, соответствующих ресурсов и материалов.

Что касается контракта экономики - его основная задача - следить за наполнением хранилищ фабрик, и формировать от этого
закупочную цену ресурсов и продажную цену материалов

Вроде все
