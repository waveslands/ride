{-# STDLIB_VERSION 6 #-}
{-# SCRIPT_TYPE ACCOUNT #-}
{-# CONTENT_TYPE LIBRARY #-}

let LANDPREFIX = "LAND"
let DUCKPREFIX = "DUCK"
let ARTPRESALE = "PRESALE"
let ARTONBOARD = "ONBOARD"
let NUMRES = 6
let DAILYRESBYPIECE = 345_6000 # 0.03456000 (base value)
let DAYMILLIS = 86_400_000 # 24*60*60*1000
let WHMULTIPLIER = 100_0000_0000
let DEFAULTLOCATION = "Africa_F_Africa"
let RESOURCEPRICEMIN = 39637 # (was 158549): 0.03456000 * 25 * 0.039637 * 365 = 12.5 USDT (5% APR)
let ESMAXPACKAGES = 3
let ESBUYCOEF = 4
let ESSELLCOEF = 10
let resTypes = ["Oil", "Ore", "Wood", "Sand", "Clay", "Organic"]
let matTypes = ["Fuel", "Metal", "Plank", "Glass", "Plastic", "Protein"]
let prodTypes = [
  "First Aid Kit L1", "First Aid Kit L2", "First Aid Kit L3",
  "Backpack L1", "Backpack L2", "Backpack L3",
  "Food Ration L1", "Food Ration L2", "Food Ration L3",
  "Jet Pack L1", "Jet Pack L2", "Jet Pack L3",
  "Shield L1", "Shield L2", "Shield L3"]
  
let continents = ["Americas", "Europe", "Asia", "Africa", "Oceania"]

let contIdxAmericas = 0
let contIdxEurope = 1
let contIdxAsia = 2
let contIdxAfrica = 3
let contIdxOceania = 4

let productionMatrix = [ # up to 250 recipes (50 per continent); fuel, metal, plank, glass, plastic, protein - 2 (was 1) decimal, coeff=1 decimal, continent
  # Americas {(0.08+0.08+0.08+0.17+0.17+0.42)*1.2 = 1.2}
  "8_8_8_17_17_42_12_0", # 0 Аптечка1, Восстанавливает 30 hp => 1.2 materials to craft
  "8_8_8_17_17_42_24_0", # 1 Аптечка2, 60 hp => 2.4 mat
  "8_8_8_17_17_42_36_0", # 2 Аптечка3, 120 hp => 3.6 mat
  # Europe {(0.08+0.19+0.19+0.08+0.27+0.19)*2.6 = 2.6}
  "8_19_19_8_27_19_26_1", # 3 Рюкзак1, Увеличивает кол-во переносимого груза (5) => 2.6 mat
  "8_19_19_8_27_19_52_1", # 4 Рюкзак2, (10) => 5.2 mat
  "8_19_19_8_27_19_78_1", # 5 Рюкзак3, (20) => 7.8 mat
  # Asia {(0.08+0.08+0.08+0.08+0.08+0.6)*1.3 = 1.3}
  "8_8_8_8_8_60_13_2", # 6 Рацион1, Увеличивает показатели (+2) ко всем параметрам персонажа на 24h => 1.3 mat
  "8_8_8_8_8_60_26_2", # 7 Рацион2, (+4) => 2.6 mat
  "8_8_8_8_8_60_39_2", # 8 Рацион3, (+8) => 3.9 mat
  # Africa {(0.3+0.3+0.03+0.17+0.17+0.03)*3 = 3}
  "30_30_3_17_17_3_30_3", # 9 Реактивный ранец1, Уменьшает шанс столкновения с воздушными препятствиями (30%) => 3.0 mat
  "30_30_3_17_17_3_60_3", # 10 Реактивный ранец2, (50%) => 6.0 mat
  "30_30_3_17_17_3_90_3", # 11 Реактивный ранец3, (70%) => 9.0 mat
  # Oceania {(0.18+0.18+0.1+0.18+0.18+0.18)*1.1 = 1.1}
  "18_18_10_18_18_18_11_4", # 12 Силовое поле1, Уменьшает кол-во урона (30 hp) => 1.1 mat
  "18_18_10_18_18_18_22_4", # 13 Силовое поле2, (50 hp) => 2.2 mat
  "18_18_10_18_18_18_33_4" # 14 Силовое поле3, (70 hp) => 3.3 mat
]

let rIdxFuel = 0
let rIdxMetal = 1
let rIdxPlank = 2
let rIdxGlass = 3
let rIdxPlastic = 4
let rIdxProtein = 5
let rIdxCoeff = 6
let rIdxContinent = 7
let recipeSize = 8

let productPkgSize = 10

# warehouse groups:
let whIdxLevels = 0 # warehouse volume (3 * (infaLevel + 1) * landIndex)
let whIdxRes = 1 # resList
let whIdxMat = 2 # matList
let whIdxProd = 3 # prodList
let whIdxLOFT = 4 # warehouse locked_occupied_free_total volume

# warehouse volume groups:
let volLocked = 0
let volOccupied = 1
let volFree = 2
let volTotal = 3

# backpack groups:
let bpIdxLevel = 0 # upgradeLevel
let bpIdxRes = 1 # resList
let bpIdxMat = 2 # matList
let bpIdxProd = 3 # prodList

func keyLastTxIdByUser(addr: String) = "lastTxIdByUser_" + addr
func keyLandAssetIdToOwner(assetId: String) = "nftOwner_" + assetId
func keyLandAssetIdToCustomName(assetId: String) = "landCustomNameByAssetId_" + assetId
func keyStakedTimeByAssetId(assetId: String) = "stakedTime_" + assetId # both land and duck assets
func keyInfraLevelByAssetId(assetId: String) = "infraLevel_" + assetId
func keyLandArtStatusByTypeAndAssetId(type: String, assetId: String) = makeString(["landArtStatus", type, assetId], "_")
func keyStakedTimeByTypeAssetIdAndOwner(nftType: String, assetId: String, ownerAddr: String) =
    "stakedTimeByTypeAssetIdAndOwner_" + nftType + "_" + assetId + "_" + ownerAddr # both land and duck assets
func keyWarehouseByLand(landAssetId: String) = "wareHouse_" + landAssetId
#func keyStakedPiecesByOwner(ownerAddr: String) = "stakedPiecesByOwner_" + ownerAddr
func keyDuckAssetIdToCustomName(assetId: String) = "duckCustomNameByAssetId_" + assetId
func keyAddressToCustomName(addr: String) = "accountCustomNameByAddr_" + addr
func keyAddressRefBy(addr: String) = "accRefBy_" + addr # if present, then addr has/had ONBOARD artifact
func keyOnboardArtActivatedOnDuck(duckAssetId: String) = "onboardArtActivatedOnDuck_" + duckAssetId # if present, then ONBOARD artifact is activated on duckAssetId by address (value)
func keyOnboardArtDuckActivatedBy(addr: String) = "onboardArtActivatedDuckBy_" + addr # if present, then ONBOARD artifact is activated by addr on duckAssetId (value)
func keyAddressReferrals(addr: String) = "accReferrals_" + addr
func keyDuckIdToOwner(assetId: String) = "duckOwner_" + assetId
func keyStakedDuckByOwner(ownerAddr: String) = "stakedDuckByOwner_" + ownerAddr
func keyBackpackByDuck(duckAssetId: String) = "backPack_" + duckAssetId
func keyDuckLocation(duckAssetId: String) = "duckLocation_" + duckAssetId # continent_locType_id
func keyDuckHealth(duckAssetId: String) = "duckHealth_" + duckAssetId
func keyBlocked() = "contractsBlocked"
# governance keys
func keyUserGwlReleaseTime(userAddr: String) = "%s%s__userGwlReleaseTime__" + userAddr
func keyOrderByLand(landAssetId: String) = "landOrder_" + landAssetId
# economics contract
func keyEsWarehouse() = "emergencyWarehouseProducts"

let locIdxContinent = 0
# L|F|M|A
let locIdxType = 1
let locIdxId = 2

func getRecipeMaterials(recipe: List[String]) = {
  recipe[rIdxCoeff].parseIntValue()
}
